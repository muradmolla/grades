datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isAdmin Boolean @default(false)

  password Password?
  moderator LessonModerators[]
  grades Grades[]
  notes Note[]
  lessons LessonStudents[]
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Lesson {
  id String @id @default(cuid())
  name String

  moderators   LessonModerators[]
  gradesScheme GradedActivities[]
  students LessonStudents[]
}

model LessonStudents {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  
  lesson Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lessonId String
}

model LessonModerators {
  id String @id @default(cuid())

  lesson Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lessonId String

  moderator User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model GradedActivities {
  id String @id @default(cuid())
  title String
  weight Float
  maxValue Int

  lesson Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lessonId String

  grades Grades[]
}

model Grades {
  id String @id @default(cuid())
  grade Int

  student User @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  studentId String

  gradedActivity GradedActivities @relation(fields: [gradedActivityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  gradedActivityId String
}